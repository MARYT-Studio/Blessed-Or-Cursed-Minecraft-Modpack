# Configuration file

##########################################################################################################
# _general
#--------------------------------------------------------------------------------------------------------#
# General and/or miscellaneous options.
##########################################################################################################

_general {
    # If true, the mod will start up in debug mode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:_debug_mode=false

    # Chance for an entity on the depacify list to spawn aggressive, instead of just neutral.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.0 ]
    D:depacify_aggressive_chance=0.0

    # List of passive mobs (by entity id) that are made "neutral" like wolves.
    # You may put a tilde (~) in front of any entity id to make it specific; specific entity ids
    # will not count any entities extending (i.e., based on) the specified entity.
    # Additional number after the entity id is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
    # May or may not work on mod mobs.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken 1.0, minecraft:cow 1.0, minecraft:pig 1.0, minecraft:sheep 1.0, minecraft:rabbit 1.0, minecraft:squid 1.0 } ]
    S:depacify_list <
    >

    # If true, passive mobs will seek out and eat the items used to breed them laying on the floor.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eat_breeding_items=true

    # If true, when mobs eat breeding items off the floor, they will regain health like wolves.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eating_heals=true
}


##########################################################################################################
# door_breaking
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' door-breaking behavior.
##########################################################################################################

door_breaking {
    # If true, mobs will destroy doors that are blocking their path.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.33 ]
    D:break_speed=0.33

    # If true, broken blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain door-breaking AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only break doors while they are chasing an attack target.
    # Setting this to false typically leads to mobs smashing into your house to get to blocks they are targeting
    # as part of an idle griefing or fiddling behavior, such as torches or chests.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_target=true

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break iron doors with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_tools=true

    # Door blocks that can be broken by mobs chasing you.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:wooden_door, minecraft:iron_door, minecraft:trapdoor, minecraft:fence_gate, minecraft:iron_trapdoor, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, ic2:reinforced_door, dcs_climate:dcs_door_marble, dcs_climate:dcs_door_greisen, dcs_climate:dcs_door_gypsum, dcs_climate:dcs_door_steel, sakura:bamboo_door, tofucraft:tofudoor_kinu, tofucraft:tofudoor_momen, tofucraft:tofudoor_ishi, tofucraft:tofudoor_metal, tofucraft:tofudoor_zunda, futuremc:acacia_trapdoor, futuremc:jungle_trapdoor, futuremc:birch_trapdoor, futuremc:spruce_trapdoor, futuremc:dark_oak_trapdoor, twilightforest:twilight_oak_door, twilightforest:twilight_oak_trapdoor, twilightforest:twilight_oak_gate, twilightforest:canopy_door, twilightforest:canopy_trapdoor, twilightforest:canopy_gate, twilightforest:mangrove_door, twilightforest:mangrove_trapdoor, twilightforest:mangrove_gate, twilightforest:dark_door, twilightforest:dark_trapdoor, twilightforest:dark_gate, twilightforest:time_door, twilightforest:time_trapdoor, twilightforest:time_gate, twilightforest:trans_door, twilightforest:trans_trapdoor, twilightforest:trans_gate, twilightforest:mine_door, twilightforest:mine_trapdoor, twilightforest:mine_gate, twilightforest:sort_door, twilightforest:sort_trapdoor, twilightforest:sort_gate, abyssalcraft:door_dlt, abyssalcraft:door_drt } ]
    S:target_blocks <
        minecraft:wooden_door
        minecraft:iron_door
        minecraft:trapdoor
        minecraft:fence_gate
        minecraft:iron_trapdoor
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        ic2:reinforced_door
        dcs_climate:dcs_door_marble
        dcs_climate:dcs_door_greisen
        dcs_climate:dcs_door_gypsum
        dcs_climate:dcs_door_steel
        sakura:bamboo_door
        tofucraft:tofudoor_kinu
        tofucraft:tofudoor_momen
        tofucraft:tofudoor_ishi
        tofucraft:tofudoor_metal
        tofucraft:tofudoor_zunda
        futuremc:acacia_trapdoor
        futuremc:jungle_trapdoor
        futuremc:birch_trapdoor
        futuremc:spruce_trapdoor
        futuremc:dark_oak_trapdoor
        twilightforest:twilight_oak_door
        twilightforest:twilight_oak_trapdoor
        twilightforest:twilight_oak_gate
        twilightforest:canopy_door
        twilightforest:canopy_trapdoor
        twilightforest:canopy_gate
        twilightforest:mangrove_door
        twilightforest:mangrove_trapdoor
        twilightforest:mangrove_gate
        twilightforest:dark_door
        twilightforest:dark_trapdoor
        twilightforest:dark_gate
        twilightforest:time_door
        twilightforest:time_trapdoor
        twilightforest:time_gate
        twilightforest:trans_door
        twilightforest:trans_trapdoor
        twilightforest:trans_gate
        twilightforest:mine_door
        twilightforest:mine_trapdoor
        twilightforest:mine_gate
        twilightforest:sort_door
        twilightforest:sort_trapdoor
        twilightforest:sort_gate
        abyssalcraft:door_dlt
        abyssalcraft:door_drt
     >
}


##########################################################################################################
# elite_ai
#--------------------------------------------------------------------------------------------------------#
# Options to control the types of elite AI and their weighted chances of occurring.
##########################################################################################################

elite_ai {
    # List of mobs that can gain special AI patterns and their chances to gain those patterns.
    # You can specify multiple chances for each entity - each chance will be rolled and multiple AIs can stack.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05 0.05, minecraft:skeleton 0.2 0.05, minecraft:zombie_pigman 0.1 0.05 0.02 } ]
    S:_mob_list <
        minecraft:zombie 0.05 0.05
        minecraft:skeleton 0.2 0.05
        minecraft:zombie_pigman 0.1 0.05 0.02
     >

    # Weight for the barrage ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_barrage=1

    # Weight for the charge ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_charge=1

    # Weight for the jump ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_jump=1

    # Weight for the leap ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_leap=1

    # Weight for the shaman ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_shaman=1

    # Weight for the spawner ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_spawner=1

    # Weight for the sprint ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_sprint=1

    # Weight for the thief ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_thief=1

    # Weight for the throw ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw=1

    # Weight for the throw_player ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw_player=1

    # Flat health increase added to mobs with barrage ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:barrage_health_boost=20.0

    # Flat health increase added to mobs with charge ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:charge_health_boost=20.0

    # Knockback resistance added to mobs with charge ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:charge_knockback_resistance=0.5

    # Speed increase multiplier to mobs with leap ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:leap_speed_boost=0.1

    # Amount (in half-hearts) healed by mobs with shaman ai every 2 seconds. Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ -Infinity, Infinity }, Default=1.0 ]
    D:shaman_heal_amount=1.0

    # Flat health increase added to mobs with shaman ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:shaman_health_boost=20.0

    # Flat health increase added to mobs with spawner ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=40.0 ]
    D:spawner_health_boost=40.0

    # Speed increase multiplier to mobs with spawner ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=-0.2 ]
    D:spawner_speed_boost=-0.2

    # Speed increase multiplier to the boots worn by mobs with sprint ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:sprint_boots_speed_boost=0.1

    # Speed increase multiplier to mobs with sprint ai while they are sprinting. Can be overridden by the mob's nbt data.
    # Setting this to 0 breaks the sprint ai, so don't do that.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.7 ]
    D:sprint_speed_boost=0.7

    # The minimum distance that mobs with thief ai will try to keep from players once they have stolen an item.
    # Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ 1.0, Infinity }, Default=16.0 ]
    D:thief_avoid_range=16.0

    # Speed increase multiplier to the helmet worn by mobs with thief ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:thief_helmet_speed_boost=0.1

    # Flat health increase added to mobs with throw-player ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:throw_player_health_boost=20.0

    # Flat damage increase added to the helmet worn by mobs with throw-player ai (these can drop as loot!).
    #    >> Double:[ Range={ 0.0, Infinity }, Default=1.0 ]
    D:throw_player_helmet_damage_boost=1.0

    # Knockback resistance added to mobs with throw-player ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:throw_player_knockback_resistance=0.5

    # Speed increase multiplier to mobs with throw ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:throw_speed_boost=0.1
}


##########################################################################################################
# idle_activities
#--------------------------------------------------------------------------------------------------------#
# Options to customize all idle behaviors for monsters (fiddling/griefing).
##########################################################################################################

idle_activities {
    # The range at which mobs will search for blocks to target horizontally (xz-plane).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=12 ]
    I:range=12

    # The range at which mobs will search for blocks to target vertically (y-axis).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=6 ]
    I:range_vertical=6

    # Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=3.5 ]
    D:reach=3.5

    # The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=32 ]
    I:scan_count=32

    # The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=0 ]
    I:scan_count_global=0

    # The number of ticks between each block scan.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=2 ]
    I:scan_delay=2
}


##########################################################################################################
# idle_fiddling
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle fiddling behavior.
##########################################################################################################

idle_fiddling {
    # If true, mobs will flip switches, press buttons, etc. while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # List of mobs that can gain idle fiddling AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:skeleton 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:skeleton 1.0
        minecraft:zombie_pigman 1.0
     >

    # Specific blocks that will NOT be fiddled with by mobs.
    # Only really useful if you whitelist an entire namespace (*) to prevent mobs from fiddling with a few blocks from that namespace.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be fiddled with by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:tnt, minecraft:wooden_door, minecraft:lever, minecraft:stone_button, minecraft:cake, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:fence_gate, minecraft:wooden_button, minecraft:unpowered_comparator, minecraft:powered_comparator, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, dcs_climate:dcs_door_marble, dcs_climate:dcs_door_greisen, dcs_climate:dcs_door_gypsum, dcs_climate:dcs_door_steel, sakura:bamboo_door, tofucraft:tofudoor_kinu, tofucraft:tofudoor_momen, tofucraft:tofudoor_ishi, tofucraft:tofudoor_zunda, twilightforest:twilight_oak_button, twilightforest:twilight_oak_door, twilightforest:twilight_oak_gate, twilightforest:canopy_button, twilightforest:canopy_door, twilightforest:canopy_gate, twilightforest:mangrove_button, twilightforest:mangrove_door, twilightforest:mangrove_gate, twilightforest:dark_button, twilightforest:dark_door, twilightforest:dark_gate, twilightforest:time_button, twilightforest:time_door, twilightforest:time_gate, twilightforest:trans_button, twilightforest:trans_door, twilightforest:trans_gate, twilightforest:mine_button, twilightforest:mine_door, twilightforest:mine_gate, twilightforest:sort_button, twilightforest:sort_door, twilightforest:sort_gate, abyssalcraft:dsbutton, abyssalcraft:dltbutton, abyssalcraft:abybutton, abyssalcraft:cstonebutton, abyssalcraft:door_dlt, abyssalcraft:door_drt } ]
    S:target_blocks <
        minecraft:tnt
        minecraft:wooden_door
        minecraft:lever
        minecraft:stone_button
        minecraft:cake
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:fence_gate
        minecraft:wooden_button
        minecraft:unpowered_comparator
        minecraft:powered_comparator
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        dcs_climate:dcs_door_marble
        dcs_climate:dcs_door_greisen
        dcs_climate:dcs_door_gypsum
        dcs_climate:dcs_door_steel
        sakura:bamboo_door
        tofucraft:tofudoor_kinu
        tofucraft:tofudoor_momen
        tofucraft:tofudoor_ishi
        tofucraft:tofudoor_zunda
        twilightforest:twilight_oak_button
        twilightforest:twilight_oak_door
        twilightforest:twilight_oak_gate
        twilightforest:canopy_button
        twilightforest:canopy_door
        twilightforest:canopy_gate
        twilightforest:mangrove_button
        twilightforest:mangrove_door
        twilightforest:mangrove_gate
        twilightforest:dark_button
        twilightforest:dark_door
        twilightforest:dark_gate
        twilightforest:time_button
        twilightforest:time_door
        twilightforest:time_gate
        twilightforest:trans_button
        twilightforest:trans_door
        twilightforest:trans_gate
        twilightforest:mine_button
        twilightforest:mine_door
        twilightforest:mine_gate
        twilightforest:sort_button
        twilightforest:sort_door
        twilightforest:sort_gate
        abyssalcraft:dsbutton
        abyssalcraft:dltbutton
        abyssalcraft:abybutton
        abyssalcraft:cstonebutton
        abyssalcraft:door_dlt
        abyssalcraft:door_drt
     >
}


##########################################################################################################
# idle_griefing
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle block breaking.
##########################################################################################################

idle_griefing {
    # If true, mobs will destroy blocks while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # If true, block breaking AI will automatically target all light sources (light value > 1).
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:break_lights=true

    # If true, a lound snapping sound (the vanilla door break sound) will be played when a block
    # is broken, which is audible regardless of distance.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:break_sound=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.5 ]
    D:break_speed=0.5

    # If true, griefed blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break stone with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:requires_tools=false

    # Specific blocks that will NOT be griefed by mobs.
    # Only really useful if "break_lights" is enabled or when you whitelist an entire namespace (*) to create safe
    # light sources, prevent mobs from breaking normal world gen that produces light, or for removing a few blocks
    # from a namespace that you don't want mobs to break.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be griefed by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:bed, minecraft:golden_rail, minecraft:crafting_table, minecraft:farmland, minecraft:furnace, minecraft:lit_furnace, minecraft:ladder, minecraft:enchanting_table, minecraft:brewing_stand, tofucraft:tofuladder_kinu, tofucraft:tofuladder_momen, tofucraft:tofuladder_ishi, tofucraft:tofuladder_metal, tofucraft:tofuladder_zunda, tofucraft:tofuladder_ishibrick, twilightforest:iron_ladder } ]
    S:target_blocks <
        minecraft:bed
        minecraft:golden_rail
        minecraft:crafting_table
        minecraft:farmland
        minecraft:furnace
        minecraft:lit_furnace
        minecraft:ladder
        minecraft:enchanting_table
        minecraft:brewing_stand
        tofucraft:tofuladder_kinu
        tofucraft:tofuladder_momen
        tofucraft:tofuladder_ishi
        tofucraft:tofuladder_metal
        tofucraft:tofuladder_zunda
        tofucraft:tofuladder_ishibrick
        twilightforest:iron_ladder
     >

    # Specific lootable blocks that will be griefed by mobs.
    # Unlike the normal "target_blocks", these blocks will not be targeted if they still have a loot table tag
    # (e.g., unopened dungeon chests).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:chest, minecraft:trapped_chest, tofucraft:tofuchest } ]
    S:target_lootable <
        minecraft:chest
        minecraft:trapped_chest
        tofucraft:tofuchest
     >
}


##########################################################################################################
# jockeys
#--------------------------------------------------------------------------------------------------------#
# Options relating to which mobs should act as riders or mounts.
##########################################################################################################

jockeys {
    # List of mobs that can be ridden on by normal-sized riders (not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:spider, minecraft:slime, minecraft:pig, minecraft:sheep, minecraft:cow, minecraft:polar_bear } ]
    S:mount_list <
        minecraft:spider
        minecraft:slime
        minecraft:pig
        minecraft:sheep
        minecraft:cow
        minecraft:polar_bear
     >

    # List of mobs that can be ridden on by small riders or normal-sized riders that are babies(not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken, minecraft:rabbit } ]
    S:mount_list_small <
        minecraft:chicken
        minecraft:rabbit
     >

    # List of mobs that can ride normal-sized mounts and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05, minecraft:skeleton 0.1, minecraft:creeper 0.05, minecraft:witch 0.05, minecraft:zombie_pigman 0.1 } ]
    S:rider_list <
        minecraft:zombie 0.05
        minecraft:skeleton 0.1
        minecraft:creeper 0.05
        minecraft:witch 0.05
        minecraft:zombie_pigman 0.1
     >

    # List of mobs that can only ride small mounts or normal-sized mounts that are babies and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={  } ]
    S:rider_list_small <
     >
}


##########################################################################################################
# reaction_ai
#--------------------------------------------------------------------------------------------------------#
# Options to customize reactive behaviors.
##########################################################################################################

reaction_ai {
    # If true, all mobs will try to avoid TNT and creepers that are about to explode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:avoid_explosions=true

    # If true, all mobs will call for help from nearby mobs of the same type when struck.
    # Note that this does not trigger from killing blows.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:call_for_help=true

    # Chance for mobs to call for help when dealt a killing blow.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:call_for_help_on_death=0.2

    # The chance any mob will try to sidestep an arrow fired in their direction.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.4 ]
    D:dodge_arrows=0.4
}


##########################################################################################################
# villages
#--------------------------------------------------------------------------------------------------------#
# Options to control village aggression and reputation.
# For reference, starting reputation is 0, minimum is -30 and maximum is 10.
# You are considered an enemy to a village if your reputation is -15 or lower.
##########################################################################################################

villages {
    # Chance for you to be marked as an aggressor (to be attacked) when you break any block in a village
    # that is not on the "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.1 ]
    D:block_aggression_chance=0.1

    # The "block_aggression_chance" and "block_treasured_aggression_chance" only trigger if your reputation
    # in the village is less than or equal to this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=-5 ]
    I:block_aggression_limit=-5

    # Specific blocks that will NOT anger villagers when broken.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:stone, minecraft:grass, minecraft:dirt, minecraft:sapling, minecraft:sand, minecraft:leaves, minecraft:golden_rail, minecraft:detector_rail, minecraft:web, minecraft:tallgrass, minecraft:deadbush, minecraft:yellow_flower, minecraft:red_flower, minecraft:brown_mushroom, minecraft:red_mushroom, minecraft:tnt, minecraft:redstone_wire, minecraft:wheat, minecraft:wooden_door, minecraft:rail, minecraft:iron_door, minecraft:unlit_redstone_torch, minecraft:snow_layer, minecraft:ice, minecraft:cactus, minecraft:reeds, minecraft:pumpkin, minecraft:lit_pumpkin, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:brown_mushroom_block, minecraft:red_mushroom_block, minecraft:melon_block, minecraft:pumpkin_stem, minecraft:melon_stem, minecraft:vine, minecraft:fence_gate, minecraft:mycelium, minecraft:waterlily, minecraft:nether_wart, minecraft:cocoa, minecraft:tripwire_hook, minecraft:tripwire, minecraft:flower_pot, minecraft:carrots, minecraft:potatoes, minecraft:unpowered_comparator, minecraft:activator_rail, minecraft:leaves2, minecraft:slime, minecraft:packed_ice, minecraft:double_plant, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, minecraft:beetroots, minecraft:frosted_ice, minecraft:structure_void, minecraft:white_shulker_box, minecraft:orange_shulker_box, minecraft:magenta_shulker_box, minecraft:light_blue_shulker_box, minecraft:yellow_shulker_box, minecraft:lime_shulker_box, minecraft:pink_shulker_box, minecraft:gray_shulker_box, minecraft:silver_shulker_box, minecraft:cyan_shulker_box, minecraft:purple_shulker_box, minecraft:blue_shulker_box, minecraft:brown_shulker_box, minecraft:green_shulker_box, minecraft:red_shulker_box, minecraft:black_shulker_box, ic2:te, ic2:leaves, ic2:sapling, ic2:reinforced_door, ic2:dynamite, ic2:uu_matter, ic2:construction_foam, ic2:coolant, ic2:creosote, ic2:hot_coolant, ic2:pahoehoe_lava, ic2:biomass, ic2:biogas, ic2:distilled_water, ic2:superheated_steam, ic2:steam, ic2:hot_water, ic2:weed_ex, ic2:air, ic2:hydrogen, ic2:oxygen, ic2:heavy_water, ic2:milk, dcs_climate:dcs_build_pressure_chal, dcs_climate:dcs_build_pressure_olivine, dcs_climate:dcs_build_flower_planting, dcs_climate:dcs_door_marble, dcs_climate:dcs_door_greisen, dcs_climate:dcs_door_gypsum, dcs_climate:dcs_door_steel, dcs_climate:dcs_bed, dcs_climate:dcs_bed_white, dcs_climate:dcs_bed_rattan, dcs_climate:dcs_bed_futon, dcs_climate:dcs_bed_hammock, dcs_climate:dcs_fluidblock_oil, dcs_climate:dcs_fluidblock_greentea, dcs_climate:dcs_fluidblock_blacktea, dcs_climate:dcs_fluidblock_coffee, dcs_climate:dcs_fluidblock_cream, dcs_climate:dcs_fluidblock_vegetable, dcs_climate:dcs_fluidblock_stock, dcs_climate:dcs_fluidblock_lemonade, dcs_climate:dcs_fluidblock_black_liquor, dcs_climate:dcs_fluidblock_hotspring, dcs_climate:dcs_fluidblock_mazai, dcs_climate:dcs_fluidblock_soy_milk, dcs_climate:dcs_fluidblock_hydrogen, dcs_climate:dcs_fluidblock_ammonia, dcs_climate:dcs_fluidblock_nitric_acid, dcs_climate:dcs_fluidblock_sulfuric_acid, dcs_climate:dcs_fluidblock_fuel_gas, dcs_climate:dcs_fluidblock_fuel_oil, dcs_climate:dcs_fluidblock_nitrogen, dcs_climate:dcs_fluidblock_ethanol, dcs_climate:dcs_fluidblock_raw_milk, dcs_climate:dcs_fluidblock_steam, dcs_climate:dcs_fluidblock_oxygen, dcs_climate:dcs_crop_rice, dcs_climate:dcs_crop_onion, dcs_climate:dcs_crop_spinach, dcs_climate:dcs_crop_bean, dcs_climate:dcs_crop_chili, dcs_climate:dcs_crop_garlic, dcs_climate:dcs_crop_lettuce, dcs_climate:dcs_crop_tomato, dcs_climate:dcs_crop_coffee, dcs_climate:dcs_crop_cotton, dcs_climate:dcs_crop_lotus2, dcs_climate:dcs_crop_herb, dcs_climate:dcs_crop_seaweed, dcs_climate:dcs_crop_soy, dcs_climate:dcs_crop_wisteria, dcs_climate:dcs_crop_ginger, dcs_climate:dcs_crop_grape, dcs_climate:dcs_leaves_lemon, dcs_climate:dcs_leaves_olive, dcs_climate:dcs_leaves_morus, dcs_climate:dcs_leaves_walnut, dcs_climate:dcs_leaves_dates, dcs_climate:dcs_leaves_datescrop, dcs_climate:dcs_leaves_tea, dcs_climate:dcs_crop_sapling, dcs_climate:dcs_crop_sapling2, dcs_climate:dcs_fluidblock_nether, sakura:hot_spring_water, sakura:foodoil, sakura:yeast_liquid, sakura:maple_syrup, sakura:grape_fluid, sakura:red_wine, sakura:green_grape_fluid, sakura:white_wine, sakura:champagne, sakura:rum, sakura:doburoku, sakura:sake, sakura:shouchu, sakura:beer, sakura:vodka, sakura:brandy, sakura:whiskey, sakura:liqueur, sakura:cocoa_liqueur, sakura:kawara, sakura:bamboo, sakura:ramen_block, sakura:udon_unfinished_block, sakura:udon_block, sakura:soba_block, sakura:pasta_block, sakura:bamboo_shoot, sakura:windbell, sakura:bamboo_door, sakura:maple_sapling_red, sakura:maple_leaves_red, sakura:fallen_leaves_red, sakura:maple_sapling_yellow, sakura:maple_leaves_yellow, sakura:fallen_leaves_yellow, sakura:maple_sapling_orange, sakura:maple_leaves_orange, sakura:fallen_leaves_orange, sakura:maple_sapling_green, sakura:maple_leaves_green, sakura:fallen_leaves_green, sakura:sakuraleaves, sakura:sakura_sapling, sakura:umeleaves, sakura:ume_sapling, sakura:maple_spile, sakura:obon, sakura:straw_web, sakura:teishoku_fish_cooked, sakura:teishoku_fish_raw, sakura:teishoku_yakiniku, sakura:teishoku_tamagoyaki, sakura:teishoku_fish_salt, sakura:teishoku_fried, sakura:teishoku_tempura, sakura:teishoku_burger, sakura:teishoku_katsu, sakura:sushi_plate, sakura:tempura_plate, sakura:mushroom_fallen_leaves, sakura:teishoku_finished, sakura:hops, sakura:seaweed, sakura:taro_crop, sakura:ricecrop, sakura:onioncrop, sakura:rapeseedcrop, sakura:chestnut_burr, sakura:tomatocrop, sakura:eggplantcrop, sakura:cabbagecrop, sakura:radishcrop, sakura:redbeancrop, sakura:buckwheatcrop, sakura:peppercrop, sakura:vanillacrop, sakura:grapevine, sakura:grapeleaves, tofucraft:soymilk, tofucraft:soymilk_hell, tofucraft:zunda_soymilk, tofucraft:nigari, tofucraft:soysauce, tofucraft:tfcollector, tofucraft:blocktofukinu, tofucraft:blocktofumomen, tofucraft:blocktofuishi, tofucraft:blocktofumetal, tofucraft:blocktofuannin, tofucraft:blocktofuegg, tofucraft:blocktofuhell, tofucraft:blocktofudiamond, tofucraft:blocktofugrilled, tofucraft:blocktofudried, tofucraft:blocktofuzunda, tofucraft:blockleek, tofucraft:blockleek_crop, tofucraft:soybean, tofucraft:soybean_nether, tofucraft:blocksprouts, tofucraft:ricecrop, tofucraft:yubagrass, tofucraft:tofu_terrain, tofucraft:zundatofu_terrain, tofucraft:sapling_tofu, tofucraft:leaves_tofu, tofucraft:sapling_apricot, tofucraft:leaves_apricot, tofucraft:tofucake, tofucraft:tofuflower, tofucraft:blockyuba, tofucraft:tofudoor_kinu, tofucraft:tofudoor_momen, tofucraft:tofudoor_ishi, tofucraft:tofudoor_metal, tofucraft:tofudoor_zunda, thaumcraft:sapling_greatwood, thaumcraft:sapling_silverwood, thaumcraft:leaves_greatwood, thaumcraft:leaves_silverwood, thaumcraft:shimmerleaf, thaumcraft:cinderpearl, thaumcraft:vishroom, thaumcraft:grass_ambient, thaumcraft:redstone_relay, thaumcraft:activator_rail, thaumcraft:flux_goo, thaumcraft:liquid_death, thaumcraft:purifying_fluid, thaumcraft:barrier, botania:flower, botania:specialflower, botania:shinyflower, botania:solidvine, botania:buriedpetals, botania:redstringfertilizer, botania:mushroom, botania:doubleflower1, botania:doubleflower2, botania:fakeair, botania:ghostrail, botania:lightrelay, botania:cellblock, botania:teruterubozu, earthworks:doubleslab_adobe, earthworks:doubleslab_chalk, earthworks:doubleslab_cinder, earthworks:doubleslab_cob, earthworks:doubleslab_concrete, earthworks:doubleslab_cordwood, earthworks:doubleslab_dry_stone, earthworks:doubleslab_gabion_gravel, earthworks:doubleslab_gabion_sand, earthworks:doubleslab_gabion_dirt, earthworks:doubleslab_mud, earthworks:doubleslab_planks_vert_oak, earthworks:doubleslab_planks_vert_spruce, earthworks:doubleslab_planks_vert_birch, earthworks:doubleslab_planks_vert_jungle, earthworks:doubleslab_planks_vert_acacia, earthworks:doubleslab_planks_vert_dark_oak, earthworks:doubleslab_plaster, earthworks:doubleslab_rammed_earth, earthworks:doubleslab_slate, earthworks:doubleslab_slate_green, earthworks:doubleslab_slate_purple, earthworks:doubleslab_slate_slab, earthworks:doubleslab_slate_slab_green, earthworks:doubleslab_slate_slab_purple, earthworks:doubleslab_slate_shingle, earthworks:doubleslab_slate_shingle_verte, earthworks:doubleslab_slate_shingle_purple, earthworks:doubleslab_slate_tile, earthworks:doubleslab_slate_tile_verte, earthworks:doubleslab_slate_tile_purple, earthworks:doubleslab_timber, earthworks:doubleslab_timber_birch, earthworks:doubleslab_timber_spruce, earthworks:doubleslab_timber_jungle, earthworks:doubleslab_timber_acacia, earthworks:doubleslab_timber_dark_oak, earthworks:doubleslab_wattle, earthworks:doubleslab_wicker, earthworks:doubleslab_wood_shingle_oak, earthworks:doubleslab_wood_shingle_spruce, earthworks:doubleslab_wood_shingle_birch, earthworks:doubleslab_wood_shingle_jungle, earthworks:doubleslab_wood_shingle_acacia, earthworks:doubleslab_wood_shingle_dark_oak, earthworks:doubleslab_reed, earthworks:doubleslab_thatch, futuremc:honey_block, futuremc:lily_of_the_valley, futuremc:cornflower, futuremc:wither_rose, futuremc:sweet_berry_bush, futuremc:bamboo, horsetweaks:crumbling_magma, tenshilib:ignore, tenshilib:structure_piece, twilightforest:twilight_leaves, twilightforest:cicada, twilightforest:twilight_plant, twilightforest:twilight_sapling, twilightforest:magic_leaves, twilightforest:trophy, twilightforest:twilight_leaves_3, twilightforest:uberous_soil, twilightforest:huge_mushgloom, twilightforest:trollvidr, twilightforest:unripe_trollber, twilightforest:trollber, twilightforest:huge_lilypad, twilightforest:huge_waterlily, twilightforest:castle_unlock, twilightforest:auroralized_glass, twilightforest:twilight_oak_door, twilightforest:twilight_oak_gate, twilightforest:canopy_door, twilightforest:canopy_gate, twilightforest:mangrove_door, twilightforest:mangrove_gate, twilightforest:dark_door, twilightforest:dark_gate, twilightforest:time_door, twilightforest:time_gate, twilightforest:trans_door, twilightforest:trans_gate, twilightforest:mine_door, twilightforest:mine_gate, twilightforest:sort_door, twilightforest:sort_gate, abyssalcraft:dltleaves, abyssalcraft:dltsapling, abyssalcraft:dreadgrass, abyssalcraft:dreadleaves, abyssalcraft:dreadsapling, abyssalcraft:dreadguardspawner, abyssalcraft:chagarothspawner, abyssalcraft:jzaharspawner, abyssalcraft:gatekeeperminionspawner, abyssalcraft:fire, abyssalcraft:luminousthistle, abyssalcraft:wastelandsthorn, abyssalcraft:door_dlt, abyssalcraft:door_drt } ]
    S:block_blacklist <
        minecraft:stone
        minecraft:grass
        minecraft:dirt
        minecraft:sapling
        minecraft:sand
        minecraft:leaves
        minecraft:golden_rail
        minecraft:detector_rail
        minecraft:web
        minecraft:tallgrass
        minecraft:deadbush
        minecraft:yellow_flower
        minecraft:red_flower
        minecraft:brown_mushroom
        minecraft:red_mushroom
        minecraft:tnt
        minecraft:redstone_wire
        minecraft:wheat
        minecraft:wooden_door
        minecraft:rail
        minecraft:iron_door
        minecraft:unlit_redstone_torch
        minecraft:snow_layer
        minecraft:ice
        minecraft:cactus
        minecraft:reeds
        minecraft:pumpkin
        minecraft:lit_pumpkin
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:brown_mushroom_block
        minecraft:red_mushroom_block
        minecraft:melon_block
        minecraft:pumpkin_stem
        minecraft:melon_stem
        minecraft:vine
        minecraft:fence_gate
        minecraft:mycelium
        minecraft:waterlily
        minecraft:nether_wart
        minecraft:cocoa
        minecraft:tripwire_hook
        minecraft:tripwire
        minecraft:flower_pot
        minecraft:carrots
        minecraft:potatoes
        minecraft:unpowered_comparator
        minecraft:activator_rail
        minecraft:leaves2
        minecraft:slime
        minecraft:packed_ice
        minecraft:double_plant
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        minecraft:beetroots
        minecraft:frosted_ice
        minecraft:structure_void
        minecraft:white_shulker_box
        minecraft:orange_shulker_box
        minecraft:magenta_shulker_box
        minecraft:light_blue_shulker_box
        minecraft:yellow_shulker_box
        minecraft:lime_shulker_box
        minecraft:pink_shulker_box
        minecraft:gray_shulker_box
        minecraft:silver_shulker_box
        minecraft:cyan_shulker_box
        minecraft:purple_shulker_box
        minecraft:blue_shulker_box
        minecraft:brown_shulker_box
        minecraft:green_shulker_box
        minecraft:red_shulker_box
        minecraft:black_shulker_box
        ic2:te
        ic2:leaves
        ic2:sapling
        ic2:reinforced_door
        ic2:dynamite
        ic2:uu_matter
        ic2:construction_foam
        ic2:coolant
        ic2:creosote
        ic2:hot_coolant
        ic2:pahoehoe_lava
        ic2:biomass
        ic2:biogas
        ic2:distilled_water
        ic2:superheated_steam
        ic2:steam
        ic2:hot_water
        ic2:weed_ex
        ic2:air
        ic2:hydrogen
        ic2:oxygen
        ic2:heavy_water
        ic2:milk
        dcs_climate:dcs_build_pressure_chal
        dcs_climate:dcs_build_pressure_olivine
        dcs_climate:dcs_build_flower_planting
        dcs_climate:dcs_door_marble
        dcs_climate:dcs_door_greisen
        dcs_climate:dcs_door_gypsum
        dcs_climate:dcs_door_steel
        dcs_climate:dcs_bed
        dcs_climate:dcs_bed_white
        dcs_climate:dcs_bed_rattan
        dcs_climate:dcs_bed_futon
        dcs_climate:dcs_bed_hammock
        dcs_climate:dcs_fluidblock_oil
        dcs_climate:dcs_fluidblock_greentea
        dcs_climate:dcs_fluidblock_blacktea
        dcs_climate:dcs_fluidblock_coffee
        dcs_climate:dcs_fluidblock_cream
        dcs_climate:dcs_fluidblock_vegetable
        dcs_climate:dcs_fluidblock_stock
        dcs_climate:dcs_fluidblock_lemonade
        dcs_climate:dcs_fluidblock_black_liquor
        dcs_climate:dcs_fluidblock_hotspring
        dcs_climate:dcs_fluidblock_mazai
        dcs_climate:dcs_fluidblock_soy_milk
        dcs_climate:dcs_fluidblock_hydrogen
        dcs_climate:dcs_fluidblock_ammonia
        dcs_climate:dcs_fluidblock_nitric_acid
        dcs_climate:dcs_fluidblock_sulfuric_acid
        dcs_climate:dcs_fluidblock_fuel_gas
        dcs_climate:dcs_fluidblock_fuel_oil
        dcs_climate:dcs_fluidblock_nitrogen
        dcs_climate:dcs_fluidblock_ethanol
        dcs_climate:dcs_fluidblock_raw_milk
        dcs_climate:dcs_fluidblock_steam
        dcs_climate:dcs_fluidblock_oxygen
        dcs_climate:dcs_crop_rice
        dcs_climate:dcs_crop_onion
        dcs_climate:dcs_crop_spinach
        dcs_climate:dcs_crop_bean
        dcs_climate:dcs_crop_chili
        dcs_climate:dcs_crop_garlic
        dcs_climate:dcs_crop_lettuce
        dcs_climate:dcs_crop_tomato
        dcs_climate:dcs_crop_coffee
        dcs_climate:dcs_crop_cotton
        dcs_climate:dcs_crop_lotus2
        dcs_climate:dcs_crop_herb
        dcs_climate:dcs_crop_seaweed
        dcs_climate:dcs_crop_soy
        dcs_climate:dcs_crop_wisteria
        dcs_climate:dcs_crop_ginger
        dcs_climate:dcs_crop_grape
        dcs_climate:dcs_leaves_lemon
        dcs_climate:dcs_leaves_olive
        dcs_climate:dcs_leaves_morus
        dcs_climate:dcs_leaves_walnut
        dcs_climate:dcs_leaves_dates
        dcs_climate:dcs_leaves_datescrop
        dcs_climate:dcs_leaves_tea
        dcs_climate:dcs_crop_sapling
        dcs_climate:dcs_crop_sapling2
        dcs_climate:dcs_fluidblock_nether
        sakura:hot_spring_water
        sakura:foodoil
        sakura:yeast_liquid
        sakura:maple_syrup
        sakura:grape_fluid
        sakura:red_wine
        sakura:green_grape_fluid
        sakura:white_wine
        sakura:champagne
        sakura:rum
        sakura:doburoku
        sakura:sake
        sakura:shouchu
        sakura:beer
        sakura:vodka
        sakura:brandy
        sakura:whiskey
        sakura:liqueur
        sakura:cocoa_liqueur
        sakura:kawara
        sakura:bamboo
        sakura:ramen_block
        sakura:udon_unfinished_block
        sakura:udon_block
        sakura:soba_block
        sakura:pasta_block
        sakura:bamboo_shoot
        sakura:windbell
        sakura:bamboo_door
        sakura:maple_sapling_red
        sakura:maple_leaves_red
        sakura:fallen_leaves_red
        sakura:maple_sapling_yellow
        sakura:maple_leaves_yellow
        sakura:fallen_leaves_yellow
        sakura:maple_sapling_orange
        sakura:maple_leaves_orange
        sakura:fallen_leaves_orange
        sakura:maple_sapling_green
        sakura:maple_leaves_green
        sakura:fallen_leaves_green
        sakura:sakuraleaves
        sakura:sakura_sapling
        sakura:umeleaves
        sakura:ume_sapling
        sakura:maple_spile
        sakura:obon
        sakura:straw_web
        sakura:teishoku_fish_cooked
        sakura:teishoku_fish_raw
        sakura:teishoku_yakiniku
        sakura:teishoku_tamagoyaki
        sakura:teishoku_fish_salt
        sakura:teishoku_fried
        sakura:teishoku_tempura
        sakura:teishoku_burger
        sakura:teishoku_katsu
        sakura:sushi_plate
        sakura:tempura_plate
        sakura:mushroom_fallen_leaves
        sakura:teishoku_finished
        sakura:hops
        sakura:seaweed
        sakura:taro_crop
        sakura:ricecrop
        sakura:onioncrop
        sakura:rapeseedcrop
        sakura:chestnut_burr
        sakura:tomatocrop
        sakura:eggplantcrop
        sakura:cabbagecrop
        sakura:radishcrop
        sakura:redbeancrop
        sakura:buckwheatcrop
        sakura:peppercrop
        sakura:vanillacrop
        sakura:grapevine
        sakura:grapeleaves
        tofucraft:soymilk
        tofucraft:soymilk_hell
        tofucraft:zunda_soymilk
        tofucraft:nigari
        tofucraft:soysauce
        tofucraft:tfcollector
        tofucraft:blocktofukinu
        tofucraft:blocktofumomen
        tofucraft:blocktofuishi
        tofucraft:blocktofumetal
        tofucraft:blocktofuannin
        tofucraft:blocktofuegg
        tofucraft:blocktofuhell
        tofucraft:blocktofudiamond
        tofucraft:blocktofugrilled
        tofucraft:blocktofudried
        tofucraft:blocktofuzunda
        tofucraft:blockleek
        tofucraft:blockleek_crop
        tofucraft:soybean
        tofucraft:soybean_nether
        tofucraft:blocksprouts
        tofucraft:ricecrop
        tofucraft:yubagrass
        tofucraft:tofu_terrain
        tofucraft:zundatofu_terrain
        tofucraft:sapling_tofu
        tofucraft:leaves_tofu
        tofucraft:sapling_apricot
        tofucraft:leaves_apricot
        tofucraft:tofucake
        tofucraft:tofuflower
        tofucraft:blockyuba
        tofucraft:tofudoor_kinu
        tofucraft:tofudoor_momen
        tofucraft:tofudoor_ishi
        tofucraft:tofudoor_metal
        tofucraft:tofudoor_zunda
        thaumcraft:sapling_greatwood
        thaumcraft:sapling_silverwood
        thaumcraft:leaves_greatwood
        thaumcraft:leaves_silverwood
        thaumcraft:shimmerleaf
        thaumcraft:cinderpearl
        thaumcraft:vishroom
        thaumcraft:grass_ambient
        thaumcraft:redstone_relay
        thaumcraft:activator_rail
        thaumcraft:flux_goo
        thaumcraft:liquid_death
        thaumcraft:purifying_fluid
        thaumcraft:barrier
        botania:flower
        botania:specialflower
        botania:shinyflower
        botania:solidvine
        botania:buriedpetals
        botania:redstringfertilizer
        botania:mushroom
        botania:doubleflower1
        botania:doubleflower2
        botania:fakeair
        botania:ghostrail
        botania:lightrelay
        botania:cellblock
        botania:teruterubozu
        earthworks:doubleslab_adobe
        earthworks:doubleslab_chalk
        earthworks:doubleslab_cinder
        earthworks:doubleslab_cob
        earthworks:doubleslab_concrete
        earthworks:doubleslab_cordwood
        earthworks:doubleslab_dry_stone
        earthworks:doubleslab_gabion_gravel
        earthworks:doubleslab_gabion_sand
        earthworks:doubleslab_gabion_dirt
        earthworks:doubleslab_mud
        earthworks:doubleslab_planks_vert_oak
        earthworks:doubleslab_planks_vert_spruce
        earthworks:doubleslab_planks_vert_birch
        earthworks:doubleslab_planks_vert_jungle
        earthworks:doubleslab_planks_vert_acacia
        earthworks:doubleslab_planks_vert_dark_oak
        earthworks:doubleslab_plaster
        earthworks:doubleslab_rammed_earth
        earthworks:doubleslab_slate
        earthworks:doubleslab_slate_green
        earthworks:doubleslab_slate_purple
        earthworks:doubleslab_slate_slab
        earthworks:doubleslab_slate_slab_green
        earthworks:doubleslab_slate_slab_purple
        earthworks:doubleslab_slate_shingle
        earthworks:doubleslab_slate_shingle_verte
        earthworks:doubleslab_slate_shingle_purple
        earthworks:doubleslab_slate_tile
        earthworks:doubleslab_slate_tile_verte
        earthworks:doubleslab_slate_tile_purple
        earthworks:doubleslab_timber
        earthworks:doubleslab_timber_birch
        earthworks:doubleslab_timber_spruce
        earthworks:doubleslab_timber_jungle
        earthworks:doubleslab_timber_acacia
        earthworks:doubleslab_timber_dark_oak
        earthworks:doubleslab_wattle
        earthworks:doubleslab_wicker
        earthworks:doubleslab_wood_shingle_oak
        earthworks:doubleslab_wood_shingle_spruce
        earthworks:doubleslab_wood_shingle_birch
        earthworks:doubleslab_wood_shingle_jungle
        earthworks:doubleslab_wood_shingle_acacia
        earthworks:doubleslab_wood_shingle_dark_oak
        earthworks:doubleslab_reed
        earthworks:doubleslab_thatch
        futuremc:honey_block
        futuremc:lily_of_the_valley
        futuremc:cornflower
        futuremc:wither_rose
        futuremc:sweet_berry_bush
        futuremc:bamboo
        horsetweaks:crumbling_magma
        tenshilib:ignore
        tenshilib:structure_piece
        twilightforest:twilight_leaves
        twilightforest:cicada
        twilightforest:twilight_plant
        twilightforest:twilight_sapling
        twilightforest:magic_leaves
        twilightforest:trophy
        twilightforest:twilight_leaves_3
        twilightforest:uberous_soil
        twilightforest:huge_mushgloom
        twilightforest:trollvidr
        twilightforest:unripe_trollber
        twilightforest:trollber
        twilightforest:huge_lilypad
        twilightforest:huge_waterlily
        twilightforest:castle_unlock
        twilightforest:auroralized_glass
        twilightforest:twilight_oak_door
        twilightforest:twilight_oak_gate
        twilightforest:canopy_door
        twilightforest:canopy_gate
        twilightforest:mangrove_door
        twilightforest:mangrove_gate
        twilightforest:dark_door
        twilightforest:dark_gate
        twilightforest:time_door
        twilightforest:time_gate
        twilightforest:trans_door
        twilightforest:trans_gate
        twilightforest:mine_door
        twilightforest:mine_gate
        twilightforest:sort_door
        twilightforest:sort_gate
        abyssalcraft:dltleaves
        abyssalcraft:dltsapling
        abyssalcraft:dreadgrass
        abyssalcraft:dreadleaves
        abyssalcraft:dreadsapling
        abyssalcraft:dreadguardspawner
        abyssalcraft:chagarothspawner
        abyssalcraft:jzaharspawner
        abyssalcraft:gatekeeperminionspawner
        abyssalcraft:fire
        abyssalcraft:luminousthistle
        abyssalcraft:wastelandsthorn
        abyssalcraft:door_dlt
        abyssalcraft:door_drt
     >

    # Chance for you to lose 1 reputation when you break any block in a village that is not on the
    # "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.15 ]
    D:block_rep_loss_chance=0.15

    # The "block_rep_loss_chance" and "block_treasured_rep_loss_chance" only trigger if your reputation
    # in the village is equal to or less than this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=8 ]
    I:block_rep_loss_limit=8

    # Chance for you to be marked as an aggressor (to be attacked) when you break a block in a village that
    # is on the "block_treasured_list" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_aggression_chance=1.0

    # Specific blocks that use separate chances for aggression and rep loss from other blocks.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:emerald_block, minecraft:bookshelf, minecraft:farmland, minecraft:cake } ]
    S:block_treasured_list <
        minecraft:emerald_block
        minecraft:bookshelf
        minecraft:farmland
        minecraft:cake
     >

    # Chance for you to lose 1 reputation when you break a block in a village that is on the "block_treasured_list"
    # while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_rep_loss_chance=1.0

    # Specific blocks that WILL aggro villagers when broken. If any blocks are specified here, they will
    # then be the only blocks that anger villagers (i.e., trigger reputation loss and aggression).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:block_whitelist <
     >

    # If true, the "/villageinfo" command will state the village center position.
    # As the command has unlimited search radius, disable this to prevent players from using the command
    # to easily find the nearest village.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:command_include_center=true

    # Chance for you to earn 1 reputation for each monster killed near a village. The only reasonable way
    # to restore rep from -15 or lower with "villagers_defend" enabled.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:help_rep_chance=0.2

    # If true, all players known to a village will gain 1 rep when a new house is added to a village and
    # lose 1 rep when a house is lost. Highly recommended to keep "refresh_houses" enabled when this is.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:house_rep=true

    # If true, all villagers will spawn with randomized names based on their profession and career.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers=true

    # If true, villager names will be marked as 'always shown' so that you do not need to mouse over them
    # to see their names. Also makes them a little easier to keep track of.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers_always_show=true

    # If true, houses will stay a part of a village permanently once added (until their doors are destroyed
    # or all villagers in the village are killed), instead of being constantly added/removed as villagers move around.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:refresh_houses=true

    # If true, particle effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_particles=true

    # If true, villager sound effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_sounds=true

    # If true, villagers will defend their village by attacking its aggressors and players with
    # 'hated' standing (reputation <= -15), just like their iron golems do in vanilla.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:villagers_defend=true
}


